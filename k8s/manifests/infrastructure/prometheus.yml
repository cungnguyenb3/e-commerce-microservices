apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.46.0
          ports:
            - containerPort: 9090
          args:
            - --enable-feature=exemplar-storage
            - --config.file=/etc/prometheus/prometheus.yml
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-configmap
data:
  prometheus.yml: |
    global:
      scrape_interval: 2s
      evaluation_interval: 2s

    scrape_configs:
      - job_name: 'api-gateway'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['api-gateway.default.svc.cluster.local:9000'] ## only for demo purposes don't use host.docker.internal in production
      - job_name: 'product-service'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['product-service.default.svc.cluster.local:8080'] ## only for demo purposes don't use host.docker.internal in production
            labels:
              application: 'Product Service'
      - job_name: 'order-service'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['order-service.default.svc.cluster.local:8081'] ## only for demo purposes don't use host.docker.internal in production
            labels:
              application: 'Order Service'
      - job_name: 'inventory-service'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['inventory-service.default.svc.cluster.local:8082'] ## only for demo purposes don't use host.docker.internal in production
            labels:
              application: 'Inventory Service'
      - job_name: 'notification-service'
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: ['notification-service.default.svc.cluster.local:8083'] ## only for demo purposes don't use host.docker.internal in production
            labels:
              application: 'Notification Service'
      - job_name: 'kafka-exporter'
        metrics_path: '/metrics'
        static_configs:
          - targets: ['kafka-exporter.default.svc.cluster.local:9308']
            labels: 
              application: 'Kafka exporter'